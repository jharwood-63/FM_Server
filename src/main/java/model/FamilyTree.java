package model;

import java.util.Random;
import java.util.UUID;

public class FamilyTree {
    private final static String FEMALE = "f";
    private final static String MALE ="m";
    private final static String BIRTH_EVENT = "birth";
    private final static String MARRIAGE_EVENT = "marriage";
    private final static String DEATH_EVENT = "death";
    private static Data data = new Data();

    public Person generatePerson(String gender, String associateUsername, int generations) {
        Person mother;
        Person father;
        String personID;

        if (generations > 1) {
            mother = generatePerson(FEMALE, associateUsername, generations - 1);
            father = generatePerson(MALE, associateUsername, generations - 1);

            mother.setSpouseID(father.getPersonID());
            father.setSpouseID(mother.getPersonID());

            //Add marriage events to mother and father
            //marriage events must be the same
        }

        personID = UUID.randomUUID().toString();
        Person person = new Person();
        //Set person's properties
        //first and last name generated by using json files
        //generate events for person except marriage

        // FIXME: I dont know where to add the user to the database

        return person;
    }

    /*
    * YEARS
    * user birth year is the standard
    * birth of parents will be between 20 and 40 years before that
    * marriage of parents will be between 1 and 20 years before birth of user
    * max death year is 100 years after birth, must be after birth of child
     */

    public Event createEvent(String eventType) {
        Random randIndex = new Random();
        Location location = data.getLocationData().getData()[randIndex.nextInt(data.getLocationDataLength())];
        String eventID = UUID.randomUUID().toString();
        float latitude = Float.parseFloat(location.getLatitude());
        float longitude = Float.parseFloat(location.getLongitude());

        Event event = new Event();

        /*
        * EVENT TYPES
        * Required:
        * birth
        * marriage
        * death
        * other
         */

        if (eventType.equalsIgnoreCase(BIRTH_EVENT)) {
            //FIXME: 2000 is a placeholder
            event = new Event(eventID, "", "", latitude, longitude, location.getCountry(),
                    location.getCity(), eventType, 2000);
        }
        else if (eventType.equalsIgnoreCase(MARRIAGE_EVENT)) {

        }
        else if (eventType.equalsIgnoreCase(DEATH_EVENT)) {

        }
        else {

        }

        return event;
    }
}
